class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {
        int n = nums.size();
        unordered_map<int, int> table;
        vector<int> res;
        
        //monotone stack
        stack<int> s;
        for(int i = n - 1; i >= 0; i--) {
            while(!s.empty() && s.top() < nums[i]) {
                s.pop();
            }
            if(!s.empty() && s.top() > nums[i]) {
                table[nums[i]] = s.top();
                s.push(nums[i]);
            } else {
                table[nums[i]] = -1;
                s.push(nums[i]);
            }
        }
        #if 0
        //print table
        for(auto x : table) {
            cout << " " << x.first << " = " << x.second;
        }
        cout << endl;
        #endif
        
        for(int x : findNums) {
            res.push_back(table[x]);
        }
        return res;
    }
};