/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>>res;
        queue<TreeNode*> q;
        if(!root) return res;
        res.push_back({root->val});
        
        if(!root->left && !root->right) {    
            return res;
        }
        if(root->left != NULL) {
            q.push(root->left);
        }
        if(root->right != NULL) {
            q.push(root->right);
        }
        
        while(!q.empty()) {
            vector<int> row;
            int row_size = q.size();
            //[push all same level nodes]
            for(int i=0; i<row_size; i++) {
                TreeNode* cur_node = q.front();
                q.pop();
                row.push_back(cur_node->val);
                //[store all next level node into queue]
                if(cur_node->left != NULL) q.push(cur_node->left);
                if(cur_node->right != NULL) q.push(cur_node->right);
            }
            //[order new->old]
            //res.push_back(row);
            res.insert(res.begin(), row);
        }
        return res;
    }
};
