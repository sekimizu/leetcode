/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int helper(TreeNode *node, int &max_val) {
        int left = (node->left ? helper(node->left, max_val) : 0);
        int right = (node->right ? helper(node->right, max_val) : 0);
        
        //check left node is equal or not
        if(node->left && node->left->val == node->val) {
            left++;
        } else {
            left = 0;
        }
        //check right node is equal or not
        if(node->right && node->right->val == node->val) {
            right++;
        } else {
            right = 0;
        }
        
        max_val = max(max_val, left + right);
        return max(left, right);
    }
    
    int longestUnivaluePath(TreeNode* root) {
        if(!root) return 0;
        int max_val = 0;
        helper(root, max_val);
        return max_val;
    }
};