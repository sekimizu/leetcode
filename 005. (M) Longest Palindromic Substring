class Solution {
public:
    string longestPalindrome(string s) {
        if(s.size() <= 1) return s;
        
        int start = 0, max_len = 1;
        
        for(int i = 0; i < s.size(); i++) {
            int j = i, k = i;
            if(s.size() - i <= max_len / 2) break; //rest part won't exceed max_len
            while(k < s.size() - 1 && s[k] == s[k+1]) k++; //duplicate
            i = k; //early leave
            while(j > 0 && k < s.size() && s[j - 1] == s[k + 1]) {
                j--;
                k++;
            }
            int len = k - j + 1;
            if(len > max_len) {
                start = j;
                max_len = len;
            }   
        }
        return s.substr(start, max_len);
    }
};