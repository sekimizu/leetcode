class Solution {
public:
    void permuteRecursive(vector<int> &num, int begin, vector<vector<int> > &result) {
        if (begin >= num.size()) {
		    // one permutation instance
            #if 0
            for(int i = 0; i < num.size(); i++) {
                cout << num[i] << " ";
            }
            cout << endl;
            #endif
		    result.push_back(num);
		    return;
		}
		
		for (int i = begin; i < num.size(); i++) {
		    swap(num[begin], num[i]);
		    permuteRecursive(num, begin + 1, result);
		    // reset
		    swap(num[begin], num[i]);
		}
    }
    
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>>res;
        permuteRecursive(nums, 0, res);
        return res;
    }
};
