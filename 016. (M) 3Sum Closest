class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        if(nums.size() < 3) return -1;
        
        sort(nums.begin(), nums.end());
        int close_sum = nums[0] + nums[1] + nums[nums.size() - 1];
        
        // index 0 and nums.size() - 1 for left and right
        for(int i = 1; i < nums.size() - 1; i++) {
            int left = 0, right = nums.size() - 1;
            
            while(left < right) {
                if(left == i) {
                    left++;
                    continue;
                }
                if(right == i) {
                    right--;
                    continue;
                }
                int sum = nums[i] + nums[left] + nums[right];
                if(sum == target) return sum;
                int diff1 = abs(target - close_sum);
                int diff2 = abs(target - sum);
                close_sum = (diff1 < diff2 ? close_sum : sum);
                if(sum > target) right--;
                else left++; 
            }
        }
        return close_sum;
    }
};