class Solution {
public:
    int search(vector<int>& nums, int target) {
        if(nums.size() == 0) return -1;
        int left = 0, right = nums.size() - 1;
        
        while(left <= right) {
            int mid = left + (right - left) / 2;
            if(nums[mid] == target) {
                return mid;
            } 
            
            if(nums[mid] < nums[right]) {
                //right part sorted.
                if(target > nums[mid] && target <= nums[right]) { 
                    // 6 7 0 1 2 3 4, right part sort, but 7 at left part
                    left = mid + 1;
                } else {
                    right = mid - 1;
                }
            } else {
                //left part sorted.
                if(target < nums[mid] && target >= nums[left]) {
                    right = mid - 1;
                } else {
                    left = mid + 1;
                }
            }
        }
        return -1;
    }
};