class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m = obstacleGrid.size(), n = obstacleGrid[0].size();
        vector<vector<int>> res(m, vector<int>(n, 0));
        int val = 1, index = 0;
        
        while(index < m && obstacleGrid[index][0] != 1) {
            res[index][0] = 1;
            index++;
        }
        index = 0;
        while(index < n && obstacleGrid[0][index] != 1) {
            res[0][index] = 1;
            index++;
        }
        
        for(int i = 1; i < m; i++) {
            for(int j = 1; j < n; j++) {
                if(obstacleGrid[i][j] != 1) {
                    res[i][j] = res[i - 1][j] +  res[i][j - 1];   
                }  
            }
        }
        return res[m - 1][n - 1];
    }
};