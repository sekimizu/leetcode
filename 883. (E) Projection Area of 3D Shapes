class Solution {
public:
    int projectionArea(vector<vector<int>>& grid) {
        int x_axis_area = 0, y_axis_area = 0, z_axis_area = 0;
        vector<int> y_proj(grid.size(), 0);
        //vector<int> z_proj(grid.size() * grid[0].size(), 0);
        
        for(int i = 0; i < grid.size(); i++) {
            int max_x = 0;
            for(int j = 0; j < grid[0].size(); j++) {
                max_x = max(max_x, grid[i][j]);
                y_proj[j] = max(y_proj[j], grid[i][j]);
                if(grid[i][j] != 0) z_axis_area += 1;
            }
            x_axis_area += max_x;
        }
        for(auto x : y_proj) {
            y_axis_area += x;
        }
        /*
        for(auto x : z_proj) {
            z_axis_area += x;
        }
        */
        #if 0
        cout << " x_axis_area = " << x_axis_area << endl;
        cout << " y_axis_area = " << y_axis_area << endl;
        cout << " z_axis_area = " << z_axis_area << endl;
        #endif
        return x_axis_area + y_axis_area + z_axis_area;
    }
};