class Solution {
public:
    int pivotIndex(vector<int>& nums) {
        int sum = 0, cur_sum = 0;
        for(auto x : nums) sum += x;
        
        for(int i = 0; i < nums.size(); i++) {
            if(sum - nums[i] == cur_sum * 2) return i;
            cur_sum += nums[i];
        }
        return -1;
    }
};

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

class Solution {
public:
    int pivotIndex(vector<int>& nums) {
        int m = nums.size();
        if(m == 0) return -1;
        if(m == 1) return 0;
        
        vector<int> l_loop(m, 0);
        vector<int> r_loop(m, 0);
        
        l_loop[0] = nums[0];
        r_loop[m-1] = nums[m-1];
        
        for(int i = 1; i < m; i++) {
            l_loop[i] = l_loop[i-1] + nums[i];
            r_loop[m-1-i] = r_loop[m-i] + nums[m-1-i];
        }
        for(int i = 0; i < m; i++) {
            if(l_loop[i] == r_loop[i]) return i;
        }
        return -1;
    }
};

