class Solution {
public:
    int numUniqueEmails(vector<string>& emails) {
        if(emails.size() == 0) return 0;
        std::vector<string>::iterator it;
        unordered_set<string> s;
        
        for(int i = 0; i < emails.size(); i++) {
            string p = emails[i];
            //cout << " Current string = " << p << endl;
            std::size_t found = p.find(".");
            while(found != std::string::npos && found < p.find("@")) {
                p.erase(found, 1);
                found = p.find(".");
            }
            //cout << " strip . = " << p << endl;
            
            found = p.find("+");
            if(found != std::string::npos) {
                p.erase(found, p.find("@") - found);
            }
            //cout << " strip + = " << p << endl;
            //cout << " final  = " << p << endl;
            //emails[i] = p;
            s.insert(p);
        }
        //sort(emails.begin(), emails.end());
        //it = unique(emails.begin(), emails.end());
        //return distance(emails.begin(),it);
        return s.size();
    }
};
