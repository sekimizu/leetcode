class Solution {
public:
    vector<string> findWords(vector<string>& words) {
        vector<string> res;
        unordered_map<char, int> mapping = {
            {'Q', 1}, {'W', 1}, {'E', 1}, {'R', 1}, {'T', 1}, {'Y', 1}, {'U', 1}, {'I', 1}, {'O', 1}, {'P', 1},
            {'A', 2}, {'S', 2}, {'D', 2}, {'F', 2}, {'G', 2}, {'H', 2}, {'J', 2}, {'K', 2}, {'L', 2},
            {'Z', 3}, {'X', 3}, {'C', 3}, {'V', 3}, {'B', 3}, {'N', 3}, {'M', 3}
        };
        
        for(string x : words) {
            int index = mapping.count(toupper(x[0]));
            while(index != 0 && index < x.size()) {
                if(mapping.count(toupper(x[index])) && mapping[toupper(x[0])] == mapping[toupper(x[index++])]) continue;
                index = 0;
            }
            if(index == x.size()) res.push_back(x);
        }
        
        return res;
    }
};


