/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        //[head node equal to value]
        while(head && head->val == val) head = head->next;
        if(!head) return NULL;
        
        ListNode *cur = head, *tmp;
        
        //[check next node valuse equal or not]
        while(cur && cur->next) {
            if(cur->next->val == val) {
                cur->next = cur->next->next;
            } else {
                cur = cur->next;    
            }
            
        }
        //if(cur) cout << "LAST cur value = " << cur->val << endl;
        
        return head;
    }
};
